-- This script was generated by a beta version of the ERD tool in pgAdmin 4.
-- Please log an issue at https://redmine.postgresql.org/projects/pgadmin4/issues/new if you find any bugs, including reproduction steps.
BEGIN;


DROP TABLE IF EXISTS public.user_info;

CREATE TABLE IF NOT EXISTS public.user_info
(
    email character varying(250),
    pwd character varying(250) NOT NULL,
    username character varying(50) NOT NULL,
    permission integer DEFAULT 0,
    secret_key character varying(250) NOT NULL,
    dob date DEFAULT Now(),
    PRIMARY KEY (username)
);

DROP TABLE IF EXISTS public.user_profile;

CREATE TABLE IF NOT EXISTS public.user_profile
(
    fullname character varying(50) NOT NULL,
    username character varying(50) NOT NULL,
    gender character varying(10) DEFAULT 'unknow',
    location character varying(250),
    about character varying(250),
    avatar character varying(300),
    PRIMARY KEY (username)
);

DROP TABLE IF EXISTS public.group_info;

CREATE TABLE IF NOT EXISTS public.group_info
(
    group_id bigserial,
    group_name character varying(100) NOT NULL,
    description character varying(250),
    PRIMARY KEY (group_id)
);

DROP TABLE IF EXISTS public.general_post;

CREATE TABLE IF NOT EXISTS public.general_post
(
    post_id bigserial,
    author_username character varying(50) NOT NULL,
    date_post timestamp without time zone DEFAULT Now(),
    img character varying(250),
    text character varying(250) DEFAULT 'insert your caption',
    PRIMARY KEY (post_id)
);

DROP TABLE IF EXISTS public.reaction;

CREATE TABLE IF NOT EXISTS public.reaction
(
    react_on bigserial NOT NULL,
    react_type integer DEFAULT 0,
    react_by character varying(50) NOT NULL,
    PRIMARY KEY (react_on, react_by)
);

DROP TABLE IF EXISTS public.general_comment;

CREATE TABLE IF NOT EXISTS public.general_comment
(
    cmt_id bigserial,
    cmt_on bigserial NOT NULL,
    cmt_by character varying(50) NOT NULL,
    text character varying(250) DEFAULT 'your comment',
    cmt_time time without time zone DEFAULT Now(),
    PRIMARY KEY (cmt_id)
);

DROP TABLE IF EXISTS public.follow;

CREATE TABLE IF NOT EXISTS public.follow
(
    usr_follow character varying(50) NOT NULL,
    usr_followed character varying(50) NOT NULL,
    PRIMARY KEY (usr_followed, usr_follow)
);

DROP TABLE IF EXISTS public.market_post;

CREATE TABLE IF NOT EXISTS public.market_post
(
    post_id bigserial NOT NULL,
    post_by character varying(50) NOT NULL,
    post_time timestamp without time zone DEFAULT Now(),
    img character varying(250) DEFAULT './public/defaultItem.png',
    text character varying(250) DEFAULT 'insert your caption',
    price integer DEFAULT 0,
    title character varying(50) DEFAULT 'untitled',
    tag text[],
    PRIMARY KEY (post_id)
);

DROP TABLE IF EXISTS public.user_wall;

CREATE TABLE IF NOT EXISTS public.user_wall
(
    username character varying(50) NOT NULL,
    post_id bigserial NOT NULL,
    PRIMARY KEY (username, post_id)
);

DROP TABLE IF EXISTS public.market_comment;

CREATE TABLE IF NOT EXISTS public.market_comment
(
    cmt_id bigserial,
    cmt_on bigserial NOT NULL,
    cmt_by character varying(50) NOT NULL,
    cmt_time timestamp without time zone DEFAULT Now(),
    text character varying(250) DEFAULT 'your comment',
    PRIMARY KEY (cmt_id)
);

DROP TABLE IF EXISTS public.user_blocked;

CREATE TABLE IF NOT EXISTS public.user_blocked
(
    username character varying(50) NOT NULL,
    user_blocked character varying(50) NOT NULL,
    PRIMARY KEY (username, user_blocked)
);

DROP TABLE IF EXISTS public.group_member;

CREATE TABLE IF NOT EXISTS public.group_member
(
    group_id bigserial NOT NULL,
    username character varying(50) NOT NULL,
    permission integer DEFAULT 0,
    blocked boolean DEFAULT false,
    PRIMARY KEY (group_id, username)
);

DROP TABLE IF EXISTS public.group_wall;

CREATE TABLE IF NOT EXISTS public.group_wall
(
    group_id bigserial NOT NULL,
    post_id bigserial NOT NULL,
    PRIMARY KEY (group_id, post_id)
);

ALTER TABLE IF EXISTS public.user_profile
    ADD CONSTRAINT fk_usrprofile_usr FOREIGN KEY (username)
    REFERENCES public.user_info (username) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.general_post
    ADD CONSTRAINT "fk_gpost_usrInfo" FOREIGN KEY (author_username)
    REFERENCES public.user_profile (username) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.reaction
    ADD CONSTRAINT fk_rct_post FOREIGN KEY (react_on)
    REFERENCES public.general_post (post_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.reaction
    ADD CONSTRAINT fk_rct_usr FOREIGN KEY (react_by)
    REFERENCES public.user_profile (username) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.general_comment
    ADD CONSTRAINT fk_cmt_usr FOREIGN KEY (cmt_by)
    REFERENCES public.user_profile (username) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.general_comment
    ADD CONSTRAINT fk_comment_post FOREIGN KEY (cmt_on)
    REFERENCES public.general_post (post_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.follow
    ADD CONSTRAINT fk_flwing_usr FOREIGN KEY (usr_follow)
    REFERENCES public.user_profile (username) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.follow
    ADD CONSTRAINT fk_flwed_usr FOREIGN KEY (usr_followed)
    REFERENCES public.user_profile (username) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.market_post
    ADD CONSTRAINT fk_mpost_profile FOREIGN KEY (post_by)
    REFERENCES public.user_profile (username) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.user_wall
    ADD CONSTRAINT fk_usrlib_usr FOREIGN KEY (username)
    REFERENCES public.user_info (username) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.user_wall
    ADD CONSTRAINT fk_usrlib_post FOREIGN KEY (post_id)
    REFERENCES public.general_post (post_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.market_comment
    ADD CONSTRAINT fk_mcmt_mpost FOREIGN KEY (cmt_on)
    REFERENCES public.market_post (post_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.market_comment
    ADD CONSTRAINT fk_mcmt_profile FOREIGN KEY (cmt_by)
    REFERENCES public.user_profile (username) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.user_blocked
    ADD CONSTRAINT fk_blocking_usr FOREIGN KEY (username)
    REFERENCES public.user_info (username) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.user_blocked
    ADD CONSTRAINT fk_blocked_usr FOREIGN KEY (user_blocked)
    REFERENCES public.user_profile (username) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.group_member
    ADD CONSTRAINT fk_gmem_group FOREIGN KEY (group_id)
    REFERENCES public.group_info (group_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.group_member
    ADD CONSTRAINT fk_gmem_usr FOREIGN KEY (username)
    REFERENCES public.user_profile (username) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.group_wall
    ADD CONSTRAINT fk_gwall_group FOREIGN KEY (group_id)
    REFERENCES public.group_info (group_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.group_wall
    ADD CONSTRAINT fk_gwall_post FOREIGN KEY (post_id)
    REFERENCES public.general_post (post_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;

END;